{"version":3,"sources":["model/action.type.ts","actions/PostActons.ts","components/PostComment.tsx","components/PostDetails.tsx","actions/UserActions.ts","components/TopMenu.tsx","components/PostCard.tsx","actions/PostCategoryActions.ts","components/PostCategoryFilter.tsx","components/PostFilter.tsx","actions/TitleActions.ts","components/ViewPosts.tsx","components/user/Login.tsx","components/UserPosts.tsx","components/user/NewPost.tsx","components/AdminPage.tsx","components/user/Signup.tsx","App.tsx","rootReducer.ts","reducers/PostReducer.ts","reducers/PostCategoryReducer.ts","reducers/UserReducer.ts","reducers/TitleReducer.ts","serviceWorker.ts","index.tsx"],"names":["ActionType","axios","defaults","withCredentials","loadPosts","dispach","get","then","value","posts","data","Promise","all","map","element","id","result","comments","type","SET_POSTS","setPosts","addPost","title","desc","cat","post","description","category","error","ADD_POST","alert","catch","err","updatePost","patch","status","resolve","UPDATE_POST","deletePost","delete","DELETE_POST","addComment","content","ADD_COMMENT","comment","deleteComment","DELETE_COMMENT","connect","state","user","onDelete","props","Segment","Comment","author","Actions","Action","as","Button","onClick","size","color","floated","Content","Author","firstName","lastName","Text","withRouter","ownProps","find","match","params","onAddComment","React","useState","showComments","setShowComments","setComment","Grid","className","centered","Row","Column","Header","textAlign","Subheader","printAuthor","stretched","basic","attached","split","inverted","fluid","prev","Group","collapsed","key","Form","TextArea","placeholder","onChange","e","currentTarget","preventDefault","console","log","labelPosition","icon","primary","loginUser","username","password","Axios","setUserAction","LOGIN","chechUser","logout","LOGOUT","registerUser","Menu","borderless","stackable","Item","Link","to","position","PostCard","Card","Meta","loadCategories","SET_CATEGORIES","categories","postCategories","active","selectedCategoryId","SET_ACTIVE_CATEGORY","setActiveCategory","loadCat","vertical","link","onTitleChange","SET_TITLE","setTitle","useEffect","Container","Label","Input","filter","toLowerCase","startsWith","sort","a","b","width","verticalAlign","PostCategoryFilter","login","setUsername","setError","method","Field","required","target","autoComplete","name","pass","$","val","history","push","page","setPage","undefined","direction","setDirection","column","setColumn","quote","ajax","url","dataType","success","response","handleSort","selCol","length","reverse","Table","sortable","HeaderCell","sorted","Body","slice","index","Cell","Pagination","activePage","onPageChange","event","parseInt","totalPages","Math","ceil","NewPost","setDesc","setCat","label","Dropdown","selection","options","text","selected","disabled","UpdatePost","routeProps","renderActiveShape","RADIAN","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","fill","payload","percent","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","x","y","dy","d","stroke","r","toFixed","activeIndex","setActiveIndex","selectedIndex","setSelectedIndex","users","setUsers","height","compact","onMouseEnter","onMouseDown","activeShape","dataKey","substr","offset","angle","fontSize","minTickGap","onSubmit","setPassword","confirmPassword","setConfirmPassword","firstname","setFirstname","lastname","setlLastname","age","setAge","findUser","loading","setLoading","padded","columns","exact","path","combineReducers","action","DEFAULT","com","FETCH_POST_CATEGORIES","Boolean","window","location","hostname","store","createStore","rootReducer","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.fe33e635.chunk.js","sourcesContent":["export enum ActionType {\r\n    LOGIN = 'login',\r\n    SIGN_UP = 'signup',\r\n    SET_POSTS = 'sp',\r\n    ADD_POST = 'ap',\r\n    DEFAULT = 'def',\r\n    FETCH_POST_CATEGORIES = 'fpc',\r\n    SET_ACTIVE_CATEGORY = 'ac',\r\n    SET_CATEGORIES = 'setCategories',\r\n    DELETE_POST = 'delpost',\r\n    LOGOUT = 'logout',\r\n    ADD_COMMENT = 'add comment',\r\n    DELETE_COMMENT = 'delete commetn',\r\n    UPDATE_POST = 'update post',\r\n    SET_TITLE = 'set title'\r\n\r\n}\r\n\r\nexport interface Action {\r\n    type: ActionType,\r\n    [key: string]: any\r\n}","import { Post, PostCategory, Comment } from \"../model/model.type\";\r\nimport { Action, ActionType } from \"../model/action.type\";\r\nimport { Dispatch } from \"redux\";\r\nimport axios from 'axios'\r\naxios.defaults.withCredentials = true;\r\nexport const setPosts = (posts: Post[]): Action => {\r\n    return {\r\n        type: ActionType.SET_POSTS,\r\n        posts: posts\r\n    }\r\n}\r\nexport const loadPosts = (dispach: Dispatch<Action>) => {\r\n    return () => {\r\n        return axios.get('https://localhost:8443/post').then(value => {\r\n            let posts = value.data as Post[];\r\n            Promise.all(posts.map(element => {\r\n                return axios.get(`https://localhost:8443/post/${element.id}/comments`).then(result => {\r\n\r\n\r\n                    element.comments = result.data;\r\n                })\r\n            })).then(value => {\r\n                dispach(setPosts(posts));\r\n            })\r\n\r\n        })\r\n    }\r\n}\r\nexport const addPost = (dispach: Dispatch<Action>) => (title: string, desc: string, cat: PostCategory, id?: number) => {\r\n    return axios.post('https://localhost:8443/post', { title: title, description: desc, category: cat }, {\r\n    }).then(value => {\r\n\r\n        if (!value.data) {\r\n            return;\r\n        }\r\n        let data = { ...value.data, comments: [] };\r\n        if (data.error) {\r\n\r\n            return;\r\n        }\r\n        dispach({\r\n            type: ActionType.ADD_POST,\r\n            post: data\r\n        })\r\n    }).then(value => {\r\n        alert('Successfully created post');\r\n    }).catch(err => {\r\n        alert(err);\r\n    })\r\n}\r\n\r\nexport const updatePost = (dispach: Dispatch<Action>) => (title: string, desc: string, cat: PostCategory, id?: number) => {\r\n    return axios.patch(`https://localhost:8443/post/${id}`, {\r\n\r\n        title: title,\r\n        description: desc,\r\n        category: cat\r\n\r\n    }).then(value => {\r\n        if (value.data.status && value.data.status === 'ok') {\r\n            axios.get(`https://localhost:8443/post/${value.data.post.id}/comments`).then(result => {\r\n                value.data.post.comments = result.data;\r\n                dispach({\r\n                    type: ActionType.UPDATE_POST,\r\n                    post: value.data.post\r\n                })\r\n                alert('Post is updated successfully');\r\n                return Promise.resolve({ status: 'ok' })\r\n            })\r\n\r\n        } else {\r\n            alert(value.data.status);\r\n            return Promise.resolve({ status: 'error' })\r\n        }\r\n    })\r\n}\r\n\r\nexport const deletePost = (dispach: Dispatch<Action>) => (id: number) => {\r\n\r\n    return axios.delete('https://localhost:8443/post/' + id).then(value => {\r\n\r\n        if (!value.data.status) {\r\n            alert('unknown error');\r\n        }\r\n        alert(value.data.status);\r\n        if (value.data.status === 'success') {\r\n            dispach({\r\n                type: ActionType.DELETE_POST,\r\n                id: id\r\n            })\r\n        }\r\n    })\r\n}\r\nexport const addComment = (dispach: Dispatch<Action>) => (content: string, post: Post) => {\r\n    return axios.post(`https://localhost:8443/post/${post.id}/comments`, { content: content }).then(value => {\r\n\r\n        const data = value.data;\r\n\r\n        dispach({\r\n            type: ActionType.ADD_COMMENT,\r\n            comment: data\r\n        })\r\n    })\r\n}\r\nexport const deleteComment = (dispach: Dispatch<Action>) => (comment: Comment) => {\r\n\r\n    return axios.delete(`https://localhost:8443/post/${comment.post.id}/comments/${comment.id}`).then(value => {\r\n\r\n        if (value.data.status === 'deleted') {\r\n            dispach({\r\n                type: ActionType.DELETE_COMMENT,\r\n                comment: comment\r\n            })\r\n        }\r\n\r\n    })\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Comment, Segment } from 'semantic-ui-react';\r\nimport { deleteComment } from '../actions/PostActons';\r\nimport { Comment as ModelComment, User } from '../model/model.type';\r\nimport { StateType } from '../model/store.type';\r\n\r\ninterface Props {\r\n    comment: ModelComment,\r\n    user: User | null,\r\n    onDelete: (comment: ModelComment) => Promise<void>\r\n}\r\nfunction PostComment(props: Props) {\r\n\r\n    const canDelete = () => {\r\n        if (!props.user) {\r\n            return false;\r\n        }\r\n        if (props.user.category === 'admin') {\r\n            return true;\r\n        }\r\n        if (!props.comment.user) {\r\n            return false;\r\n        }\r\n        return props.comment.user.id === props.user.id || props.comment.post.author.id === props.user.id\r\n    }\r\n    return (\r\n        <Segment>\r\n            <Comment>\r\n                {canDelete() && <Comment.Actions >\r\n                    <Comment.Action as={Button} onClick={() => {\r\n                        props.onDelete(props.comment);\r\n                    }} size='tiny' color='red' floated='right' >X</Comment.Action>\r\n                </Comment.Actions>}\r\n                <Comment.Content>\r\n\r\n                    <Comment.Author >{(props.comment.user) ? (props.comment.user.firstName + \" \" + props.comment.user.lastName) : 'user is not found'}</Comment.Author>\r\n\r\n                    <Comment.Text>\r\n                        <p>{props.comment.content}</p>\r\n                    </Comment.Text>\r\n\r\n                </Comment.Content>\r\n            </Comment>\r\n        </Segment>\r\n    );\r\n}\r\nexport default connect((state: StateType) => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}, dispach => {\r\n    return {\r\n        onDelete: deleteComment(dispach)\r\n    }\r\n})(PostComment)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport { Button, Comment, Form, Grid, Header, Segment } from 'semantic-ui-react';\r\nimport { Post, User } from '../model/model.type';\r\nimport { StateType } from '../model/store.type';\r\nimport PostComment from './PostComment';\r\nimport { addComment } from '../actions/PostActons';\r\n\r\ninterface Props {\r\n    post: Post,\r\n    user?: User,\r\n    onAddComment: (content: string, post: Post) => Promise<void>\r\n}\r\nfunction PostDetails(props: Props & RouteComponentProps) {\r\n    const [showComments, setShowComments] = React.useState(true);\r\n    const [comment, setComment] = React.useState('');\r\n    if (!props.post) {\r\n        return (<>Loading</>)\r\n    }\r\n    const printAuthor = () => {\r\n        if (!props.post.author) {\r\n            return 'User no longer exists';\r\n        }\r\n        if (props.post.author.id === props.user?.id) {\r\n            return 'you';\r\n        }\r\n        return props.post.author.firstName + ' ' + props.post.author.lastName;\r\n    }\r\n    return (\r\n        <Grid className='postDetails' centered >\r\n            <Grid.Row >\r\n                <Grid.Column >\r\n                    <Header size='huge' textAlign='center'>\r\n                        <Header.Content>\r\n                            {props.post.title}\r\n                        </Header.Content>\r\n                        <Header.Subheader >\r\n                            Author: {printAuthor()}\r\n                        </Header.Subheader>\r\n                        <Header.Subheader>\r\n                            Category: {props.post.category.value}\r\n                        </Header.Subheader>\r\n                    </Header>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row stretched >\r\n                <Grid.Column stretched >\r\n                    <Segment basic attached='top' size='large'>\r\n                        {props.post.description.split('\\n').map(element => (\r\n                            <p>{element}</p>\r\n                        ))}\r\n                    </Segment>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row >\r\n                <Grid.Column >\r\n                    <Segment inverted as={Button} fluid onClick={() => setShowComments(prev => !prev)} >{(showComments) ? 'Hide ' : 'Show '}comments</Segment>\r\n                    <Comment.Group className='center' collapsed={!showComments}>\r\n                        {props.post.comments.map(element => {\r\n                            return (\r\n                                <PostComment key={element.id} comment={element} />\r\n                            )\r\n                        })}\r\n                        {props.user && <Form>\r\n                            <Form.TextArea placeholder='Add comment...' value={comment} onChange={(e, data) => {\r\n                                setComment(e.currentTarget.value);\r\n                            }} />\r\n                            <Button content='Add Comment' onClick={(e) => {\r\n                                e.preventDefault();\r\n                                console.log(props.post);\r\n                                props.onAddComment(comment, props.post).then(() => {\r\n                                    setComment('');\r\n                                });\r\n                            }} labelPosition='left' icon='edit' primary />\r\n                        </Form>}\r\n                    </Comment.Group>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n    );\r\n}\r\nexport default withRouter(connect((state: StateType, ownProps: RouteComponentProps) => {\r\n    return {\r\n        post: state.posts.find(element => {\r\n            const id = (ownProps.match.params as any).id;\r\n            // console.log({ ownProps: ownProps, equals: id == element.id });\r\n            return id == element.id\r\n        }) as Post,\r\n        user: state.user\r\n    }\r\n}, (dispach) => {\r\n    return {\r\n        onAddComment: addComment(dispach)\r\n    }\r\n})(PostDetails));","import Axios from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { Action, ActionType } from \"../model/action.type\";\r\nimport { UnregisteredUser, User } from \"../model/model.type\";\r\nexport const loginUser = (dispach: Dispatch<Action>) => {\r\n\r\n    return (username: string, password: string) => {\r\n\r\n\r\n        return Axios.post('https://localhost:8443/user/login', {\r\n            username: username,\r\n            password: password\r\n        }).then(value => {\r\n            console.log(value.data);\r\n            if (!value.data) {\r\n                return Promise.resolve(false);\r\n            }\r\n            dispach(setUserAction(value.data));\r\n        })\r\n    }\r\n}\r\nexport const setUserAction = (user?: User): Action => {\r\n\r\n    return {\r\n        type: ActionType.LOGIN,\r\n        user: user\r\n    }\r\n}\r\nexport const chechUser = (dispach: Dispatch<Action>) => () => {\r\n\r\n    return Axios.get('https://localhost:8443/user').then(value => {\r\n\r\n        if (!value.data) {\r\n            return;\r\n        }\r\n\r\n        dispach(setUserAction(value.data));\r\n    })\r\n}\r\nexport const logout = (dispach: Dispatch<Action>) => () => {\r\n    return Axios.post('https://localhost:8443/user/logout').then(value => {\r\n        if (value.data !== true) {\r\n            alert(value.data);\r\n        } else {\r\n\r\n            dispach({ type: ActionType.LOGOUT });\r\n        }\r\n    })\r\n}\r\n\r\nexport const registerUser = (dispach: Dispatch<Action>) => (user: UnregisteredUser) => {\r\n    return Axios.post('https://localhost:8443/user/register', user).then(value => {\r\n        let data = value.data;\r\n        console.log(value.data);\r\n        if (data.error) {\r\n            return Promise.resolve({ error: data.error });\r\n        } else {\r\n            dispach(setUserAction(value.data));\r\n        }\r\n    })\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Menu } from 'semantic-ui-react';\r\nimport { logout } from '../actions/UserActions';\r\nimport { User } from '../model/model.type';\r\nimport { StateType } from '../model/store.type';\r\ninterface Props {\r\n    user?: User,\r\n    logout: () => void;\r\n}\r\nfunction TopMenu(props: Props) {\r\n    return (\r\n        <Menu className='topMenu' borderless stackable fluid attached='top'   >\r\n\r\n            <Menu.Item\r\n\r\n                as={Link}\r\n                to='/'\r\n            >Home</Menu.Item>\r\n            {props.user && (\r\n                <>\r\n                    <Menu.Item as={Link} to='/post'  >\r\n                        Posts\r\n            </Menu.Item>\r\n                    <Menu.Item as={Link} to='/newPost'  >\r\n                        New post\r\n            </Menu.Item>\r\n                    {props.user.category === 'admin' && <Menu.Item as={Link} to='/admin' >\r\n                        Admin\r\n            </Menu.Item>}\r\n                </>)}\r\n\r\n            <Menu.Menu position='right'>\r\n                {!props.user ? (\r\n                    <>\r\n                        <Menu.Item  >\r\n                            <Button as={Link} className='inverted' to='/login'>Login</Button>\r\n                        </Menu.Item>\r\n                        <Menu.Item  >\r\n                            <Button as={Link} className='inverted' to='/signup'>Sign up</Button>\r\n                        </Menu.Item>\r\n                    </>) : (\r\n                        <>\r\n                            <Menu.Item>\r\n                                {props.user.username}\r\n                            </Menu.Item>\r\n                            <Menu.Item>\r\n                                <Button as={Link} onClick={() => {\r\n                                    props.logout();\r\n                                }} className='inverted' to='/' >Logout</Button>\r\n                            </Menu.Item>\r\n                        </>\r\n                    )}\r\n            </Menu.Menu>\r\n        </Menu>\r\n    );\r\n}\r\nexport default connect((state: StateType) => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}, (dispach) => {\r\n    return {\r\n        logout: logout(dispach)\r\n    }\r\n})(TopMenu);","import React from 'react';\r\nimport { Card } from 'semantic-ui-react';\r\nimport { Post } from '../model/model.type';\r\nimport { Link } from 'react-router-dom';\r\ninterface Props {\r\n    post: Post,\r\n    showComments?: boolean\r\n}\r\nexport default function PostCard(props: Props) {\r\n    return (\r\n        <Card fluid as={Link} to={`/post/${props.post.id}`} color='black'>\r\n            <Card.Content >\r\n                <Card.Header textAlign='center' >{props.post.title}</Card.Header>\r\n                <Card.Meta textAlign='center'>Category: {props.post.category.value}</Card.Meta>\r\n                <Card.Meta textAlign='center'>Author: {props.post.author.username}</Card.Meta>\r\n\r\n            </Card.Content>\r\n\r\n        </Card>\r\n    );\r\n}\r\n","import { Action, ActionType } from \"../model/action.type\"\r\nimport { PostCategory } from \"../model/model.type\"\r\nimport { Dispatch } from \"redux\"\r\nimport Axios from \"axios\"\r\n\r\nexport const fetchPostCategories = (cat: PostCategory): Action => {\r\n    return {\r\n        type: ActionType.FETCH_POST_CATEGORIES,\r\n        categories: cat\r\n    }\r\n}\r\nexport const setActiveCategory = (cat?: PostCategory): Action => {\r\n    return {\r\n        type: ActionType.SET_ACTIVE_CATEGORY,\r\n        category: cat ? cat.id : 0\r\n    }\r\n}\r\nexport const setCategories = (cat: PostCategory[]): Action => {\r\n    return {\r\n        type: ActionType.SET_CATEGORIES,\r\n        categories: cat\r\n    }\r\n}\r\nexport const loadCategories = (dispach: Dispatch<Action>) => {\r\n    return () => {\r\n        return Axios.get('https://localhost:8443/postCategory').then(value => {\r\n\r\n            dispach(setCategories(value.data));\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Menu } from 'semantic-ui-react';\r\nimport { loadCategories, setActiveCategory } from '../actions/PostCategoryActions';\r\nimport { PostCategory } from '../model/model.type';\r\nimport { StateType } from '../model/store.type';\r\n\r\ninterface Props {\r\n    categories: PostCategory[],\r\n    active: number,\r\n    onClick: (cat: PostCategory) => void\r\n    loadCat: () => Promise<void>\r\n}\r\nfunction PostFilter(props: Props) {\r\n\r\n\r\n    return (\r\n        <Menu vertical fluid >\r\n            <Menu.Item className='inverted' >Categories</Menu.Item>\r\n            {props.categories.map(element => {\r\n                return (\r\n                    <Menu.Item link key={element.id} active={element.id === props.active} onClick={(e) => {\r\n                        props.onClick(element);\r\n                        console.log(element);\r\n                    }}>\r\n                        {element.value}\r\n                    </Menu.Item>\r\n                )\r\n            })}\r\n        </Menu>\r\n    );\r\n}\r\nexport default connect((state: StateType) => {\r\n    return {\r\n        categories: state.postCategories,\r\n        active: state.selectedCategoryId\r\n    }\r\n}, (dispach) => {\r\n    return {\r\n        onClick: (cat: PostCategory) => {\r\n            dispach(setActiveCategory(cat))\r\n        },\r\n        loadCat: loadCategories(dispach)\r\n    }\r\n})(PostFilter)\r\n","\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { StateType } from '../model/store.type'\r\nimport { Container, Form, Input, Segment, Header, Dropdown, Label, Divider, DropdownItemProps, Button } from 'semantic-ui-react'\r\n\r\nimport { setTitle } from '../actions/TitleActions'\r\n\r\ninterface Props {\r\n\r\n    onTitleChange: (text: string) => void;\r\n}\r\n\r\nconst PostFilter = (props: Props) => {\r\n\r\n    React.useEffect(() => {\r\n        /*  return () => {\r\n \r\n         } */\r\n        console.log({ props: props })\r\n    }, [])\r\n\r\n    return (\r\n        <Container>\r\n            <Header size='huge'> Filter posts </Header>\r\n            <Form>\r\n                <Label>Title</Label>\r\n                <Input fluid onChange={(e, data) => {\r\n                    props.onTitleChange(e.currentTarget.value);\r\n                }} />\r\n\r\n\r\n            </Form>\r\n\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: StateType) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispach: any) => {\r\n    return {\r\n        onTitleChange: (title: string) => { dispach(setTitle(title)) }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostFilter)\r\n","import { Action, ActionType } from \"../model/action.type\"\r\n\r\nexport const setTitle = (title: string): Action => {\r\n    return {\r\n        type: ActionType.SET_TITLE,\r\n        title: title\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Grid, Card } from 'semantic-ui-react';\r\nimport { Post } from '../model/model.type';\r\nimport { StateType } from '../model/store.type';\r\nimport PostCard from './PostCard';\r\nimport PostCategoryFilter from './PostCategoryFilter';\r\nimport PostFilter from './PostFilter';\r\n\r\ninterface StoreProps {\r\n    posts: Post[],\r\n}\r\n\r\nfunction ViewPosts(props: StoreProps) {\r\n\r\n    return (\r\n        <>\r\n            <Grid.Column floated='left' width='4'>\r\n                <PostFilter />\r\n            </Grid.Column>\r\n            <Grid.Column width='8'>\r\n                <Card.Group centered >\r\n                    {props.posts.map(element => {\r\n                        return (\r\n                            <PostCard post={element} key={element.id} />\r\n                        )\r\n                    })}\r\n\r\n                </Card.Group>\r\n            </Grid.Column >\r\n            <Grid.Column verticalAlign='top' width='4' >\r\n                <PostCategoryFilter />\r\n            </Grid.Column>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default connect((state: StateType) => {\r\n    return {\r\n        posts: state.posts.filter(element => element.title.toLowerCase().startsWith(state.title.toLowerCase()) && (!state.selectedCategoryId || element.category.id == state.selectedCategoryId)).sort((a, b) => b.id - a.id),\r\n\r\n    }\r\n})(ViewPosts);\r\n","import React from 'react';\r\nimport { Button, Form, Label } from 'semantic-ui-react';\r\nimport { withRouter, RouteComponentProps, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { loginUser } from '../../actions/UserActions';\r\nimport $ from 'jquery'\r\nimport { User } from '../../model/model.type';\r\nimport { StateType } from '../../model/store.type';\r\ninterface Props {\r\n    login: (username: string, password: string) => Promise<any>,\r\n    user: User\r\n}\r\n\r\nfunction Login(props: Props & RouteComponentProps) {\r\n    const [username, setUsername] = React.useState('');\r\n    const [error, setError] = React.useState('');\r\n    if (props.user) {\r\n        return (\r\n            <Redirect to='/' />\r\n        )\r\n    }\r\n    return (\r\n        <Form size='big' method='post'>\r\n            {error !== '' && <Label color='red' >{error}</Label>}\r\n            <Form.Field>\r\n                <label>Username</label>\r\n                <input placeholder='Username' required onChange={(e) => {\r\n                    setUsername(e.target.value);\r\n                }} />\r\n            </Form.Field>\r\n            <Form.Field>\r\n                <label>Password</label>\r\n                <input type='password' className='password' autoComplete='false' name='pass' required />\r\n            </Form.Field>\r\n\r\n            <Button className='inverted' onClick={(e) => {\r\n                e.preventDefault();\r\n                const pass = $('input[name=pass]').val() as string;\r\n                $('input[name=pass]').val('')\r\n                props.login(username, pass).then(value => {\r\n\r\n                    if (value === false) {\r\n\r\n                        setError('greska');\r\n                    } else {\r\n                        props.history.push('/');\r\n                    }\r\n                })\r\n\r\n\r\n            }}>Login</Button>\r\n        </Form >\r\n    );\r\n}\r\nexport default withRouter(connect((state: StateType) => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}, (dispach) => {\r\n    return {\r\n        login: loginUser(dispach)\r\n    }\r\n})(Login))\r\n","import $ from 'jquery';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { Button, Container, Header, Pagination, Segment, Table } from 'semantic-ui-react';\r\nimport { deletePost } from '../actions/PostActons';\r\nimport { Post, User } from '../model/model.type';\r\nimport { StateType } from '../model/store.type';\r\ninterface Props {\r\n    user?: User,\r\n    posts: Post[],\r\n    onDelete: (id: number) => void\r\n}\r\ninterface Quote {\r\n    quote: string,\r\n    author: string\r\n}\r\nfunction UserPosts(props: Props) {\r\n    const [page, setPage] = React.useState(1);\r\n    const [posts, setPosts] = React.useState<Post[]>(props.posts);\r\n    const [direction, setDirection] = React.useState<'ascending' | 'descending' | undefined>(undefined);\r\n    const [column, setColumn] = React.useState<string | null>(null);\r\n    const [quote, setQuote] = React.useState<Quote | undefined>(undefined);\r\n\r\n    React.useEffect(() => {\r\n        /*   Axios.get(`https://breakingbadapi.com/api/quote/random`, {\r\n              withCredentials: true,\r\n  \r\n          }).then(value => {\r\n              setQuote(value.data[0]);\r\n          }) */\r\n        $.ajax({\r\n            url: `https://breakingbadapi.com/api/quote/random`,\r\n            dataType: 'jsonp',\r\n            success: (response) => {\r\n                console.log('Success')\r\n                console.log(response)\r\n            },\r\n            error: (err) => {\r\n                console.log('errpr');\r\n                console.log(err);\r\n            }\r\n        }).then(value => {\r\n            console.log('success')\r\n            console.log(value)\r\n        }).catch(err => {\r\n            console.log('catch');\r\n            console.log(err)\r\n        })\r\n    }, [])\r\n\r\n    React.useEffect(() => {\r\n        setPosts(props.posts)\r\n    }, [props.posts])\r\n    if (!props.user) {\r\n        return (\r\n            <Redirect to='/login' />\r\n        )\r\n    }\r\n    const handleSort = (selCol: string) => {\r\n        if (selCol !== column) {\r\n            setColumn(selCol);\r\n            setDirection('ascending');\r\n            if (selCol === 'title') {\r\n                setPosts(props.posts.sort((a, b) => {\r\n                    return a.title.toLowerCase() > b.title.toLowerCase() ? 1 : -1\r\n                }))\r\n                return;\r\n            }\r\n            if (selCol === 'comm') {\r\n                setPosts(props.posts.sort((a, b) => a.comments.length - b.comments.length));\r\n                return;\r\n            }\r\n            if (selCol === 'author') {\r\n                setPosts(props.posts.sort((a, b) => (a.author.id === props.user?.id || a.author.username > b.author.username) ? 1 : -1));\r\n                return;\r\n            }\r\n            if (selCol === 'category') {\r\n                setPosts(props.posts.sort((a, b) => a.category.value > b.category.value ? 1 : -1))\r\n            }\r\n\r\n\r\n\r\n\r\n        } else {\r\n            setPosts(posts.reverse());\r\n            setDirection(direction === 'descending' ? 'ascending' : 'descending')\r\n        }\r\n    }\r\n    return (\r\n        <Container fluid   >\r\n            <Header as='h1'>Your posts</Header>\r\n            <Table sortable >\r\n                <Table.Header>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell>No.</Table.HeaderCell>\r\n                        <Table.HeaderCell sorted={column === 'title' ? direction : undefined} onClick={() => { handleSort('title') }} >Title</Table.HeaderCell>\r\n                        <Table.HeaderCell sorted={column === 'comm' ? direction : undefined} onClick={() => { handleSort('comm') }}>No. of comments</Table.HeaderCell>\r\n                        {props.user && props.user.category === 'admin' && <Table.HeaderCell onClick={() => { handleSort('author') }} sorted={column === 'author' ? direction : undefined}>Author</Table.HeaderCell>\r\n                        }\r\n                        <Table.HeaderCell sorted={column === 'category' ? direction : undefined} onClick={() => { handleSort('category') }}  >Category</Table.HeaderCell>\r\n                        <Table.HeaderCell>Details</Table.HeaderCell>\r\n                        <Table.HeaderCell>Modify</Table.HeaderCell>\r\n                        <Table.HeaderCell>Delete</Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Header>\r\n                <Table.Body>\r\n                    {posts.slice((page - 1) * 5, 5 * page).map((element, index) => {\r\n                        return (\r\n                            <Table.Row key={element.id}>\r\n                                <Table.Cell>{(page - 1) * 5 + index + 1}</Table.Cell>\r\n                                <Table.Cell>{element.title}</Table.Cell>\r\n                                <Table.Cell>{element.comments ? element.comments.length : 0}</Table.Cell>\r\n                                {(props.user && props.user.category === 'admin') ? (<Table.Cell>{(element.author && element.author.id === props.user?.id) ? 'You' : (element.author?.username || 'not found')}</Table.Cell>) : null\r\n                                }\r\n                                <Table.Cell>{element.category.value}</Table.Cell>\r\n                                <Table.Cell >\r\n                                    <Link to={`/post/${element.id}`}>Details</Link>\r\n                                </Table.Cell>\r\n                                <Table.Cell>\r\n                                    <Link to={`/update/${element.id}`}> Modify</Link>\r\n                                </Table.Cell>\r\n                                <Table.Cell >\r\n                                    <Button onClick={(e, data) => {\r\n                                        console.log('delete')\r\n                                        props.onDelete(element.id);\r\n                                    }} color='red'>Delete</Button>\r\n                                </Table.Cell>\r\n\r\n                            </Table.Row>\r\n                        )\r\n                    })}\r\n                </Table.Body>\r\n            </Table>\r\n            <Pagination activePage={page} onPageChange={(event, data) => {\r\n                console.log(data);\r\n                if (typeof data.activePage === 'string') {\r\n\r\n                    setPage(parseInt(data.activePage))\r\n                } else {\r\n                    setPage(data.activePage || 1);\r\n                }\r\n            }} totalPages={Math.ceil(posts.length / 5)} />\r\n            {\r\n                quote && (\r\n                    <Segment>\r\n                        <p>{quote.quote}</p>\r\n                        <p>Author:{quote.author}</p>\r\n                    </Segment>\r\n                )\r\n            }\r\n        </Container>\r\n    );\r\n}\r\nexport default connect((state: StateType) => {\r\n    return {\r\n        user: state.user,\r\n        posts: state.posts.filter(element => state.user && (state.user.category === 'admin' || (element.author && element.author.id === state.user.id)))\r\n    }\r\n}, (dispach) => {\r\n    return {\r\n        onDelete: deletePost(dispach)\r\n    }\r\n})(UserPosts);","import React from 'react';\r\nimport { Container, Header, Form, TextArea, Button, DropdownItemProps, Dropdown, Segment, Label } from 'semantic-ui-react';\r\nimport { User, PostCategory, Post } from '../../model/model.type';\r\nimport { Redirect, RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { StateType } from '../../model/store.type';\r\nimport { addPost, updatePost } from '../../actions/PostActons';\r\ninterface Props {\r\n    user?: User,\r\n    categories: PostCategory[],\r\n    onClick: (title: string, desc: string, cat: PostCategory, id?: number) => Promise<any>,\r\n    post?: Post,\r\n}\r\nfunction NewPost(props: Props) {\r\n    const [title, setTitle] = React.useState('');\r\n    const [desc, setDesc] = React.useState('');\r\n    const [cat, setCat] = React.useState<PostCategory | undefined>(undefined);\r\n\r\n    React.useEffect(() => {\r\n        if (props.post) {\r\n            setTitle(props.post.title);\r\n            setDesc(props.post.description);\r\n            setCat(props.post.category);\r\n        }\r\n    }, [props.post]);\r\n    if (!props.user) {\r\n        return (\r\n            <Redirect to='/login' />\r\n        )\r\n    }\r\n    return (\r\n        <Container fluid >\r\n            <Header as='h2'>Add new post</Header>\r\n            <Form size='big'>\r\n                <Form.Input className='postTitle' labelPosition='left corner' value={title} onChange={(e, data) => {\r\n                    setTitle(e.currentTarget.value);\r\n                }} label='Title' />\r\n                <TextArea placeholder='Content...' value={desc} onChange={(e, data) => {\r\n                    setDesc(e.currentTarget.value);\r\n                }} />\r\n                <Dropdown selection value={cat && cat.id} fluid placeholder='category' options={props.categories.map((element, index): DropdownItemProps => {\r\n                    return {\r\n                        key: element.id,\r\n                        text: element.value,\r\n                        active: element === cat,\r\n                        selected: element === cat,\r\n                        value: element.id\r\n                    }\r\n                })} onChange={(e, data) => {\r\n                    setCat(props.categories.find(element => element.id === data.value));\r\n                }} />\r\n\r\n\r\n\r\n                <Button disabled={!cat || title === ''} className='inverted' onClick={() => {\r\n                    console.log('kliknuto');\r\n                    if (!cat) {\r\n                        alert('Please insert the category')\r\n                        return;\r\n                    }\r\n                    props.onClick(title, desc, cat, props.post?.id);\r\n                }}>{props.post ? 'Modify post' : 'Add post'}</Button>\r\n            </Form>\r\n\r\n        </Container>\r\n    );\r\n}\r\nexport default connect((state: StateType) => {\r\n    return {\r\n        user: state.user,\r\n        categories: state.postCategories\r\n    }\r\n}, dispach => {\r\n    return {\r\n        onClick: addPost(dispach)\r\n    }\r\n})(NewPost);\r\n\r\nexport const UpdatePost = withRouter(connect((state: StateType, ownProps: RouteComponentProps) => {\r\n    console.log({ routeProps: ownProps })\r\n    return {\r\n        user: state.user,\r\n        categories: state.postCategories,\r\n        post: state.posts.find(element => element.id == (ownProps.match.params as any).id)\r\n    }\r\n}, dispach => {\r\n    return {\r\n        onClick: updatePost(dispach)\r\n    }\r\n})(NewPost))","import Axios from 'axios';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Bar, BarChart, CartesianGrid, Label, Pie, PieChart, Sector, Tooltip, XAxis, YAxis } from 'recharts';\r\nimport { Container } from 'semantic-ui-react';\r\nimport { Post, User } from '../model/model.type';\r\nimport { StateType } from '../model/store.type';\r\n\r\ninterface Props {\r\n    posts: Post[],\r\n    user: User\r\n}\r\nfunction AdminPage(props: Props) {\r\n    const [activeIndex, setActiveIndex] = React.useState(0);\r\n    const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n    const [users, setUsers] = React.useState<User[]>([]);\r\n    const noOfPosts = (user: User) => {\r\n        return props.posts.filter(element => element.author.id === user.id).length;\r\n    }\r\n    React.useEffect(() => {\r\n        Axios.get('https://localhost:5000/user').then(value => {\r\n            console.log({ users: value.data });\r\n            setUsers(value.data);\r\n        })\r\n    }, []);\r\n    if (!props.user || props.user.category === 'user') {\r\n        return (\r\n            <Redirect to='/login' />\r\n        )\r\n    }\r\n    return (\r\n        <Container fluid>\r\n            <PieChart\r\n\r\n                width={500}\r\n                height={500}\r\n                compact\r\n                className='whiteBackground'\r\n            >\r\n                <Pie\r\n\r\n                    activeIndex={activeIndex}\r\n                    onMouseEnter={(data, index) => {\r\n                        setActiveIndex(index);\r\n                    }}\r\n                    onMouseDown={(data, index) => {\r\n                        setSelectedIndex(index);\r\n                    }}\r\n                    activeShape={renderActiveShape}\r\n                    data={users.map(element => {\r\n                        return {\r\n                            name: element.username,\r\n                            value: noOfPosts(element)\r\n                        }\r\n                    })}\r\n                    cx={200}\r\n                    cy={200}\r\n                    innerRadius={60}\r\n                    outerRadius={80}\r\n                    fill=\"#8884d8\"\r\n                    dataKey=\"value\"\r\n\r\n                />\r\n            </PieChart>\r\n\r\n\r\n            <BarChart\r\n\r\n                className='whiteBackground'\r\n                compact\r\n                width={600}\r\n                height={500}\r\n                data={users.length ? props.posts.filter(post => post.author.id === users[selectedIndex].id).map(element => {\r\n                    return {\r\n                        post: element.title.length > 8 ? element.title.substr(0, 8) + '...' : element.title,\r\n                        value: element.comments.length\r\n                    }\r\n                }) : []}\r\n            >\r\n                <XAxis name='posts' dataKey=\"post\" >\r\n\r\n                    <Label value={users.length ? `${users[selectedIndex].username}'s posts` : 'Loading'} offset={0} position=\"insideBottom\" />\r\n                </XAxis>\r\n                <YAxis label={{ value: 'Number of comments', angle: -90, position: 'insideLeft', fontSize: 14 }} minTickGap={1} />\r\n                <Tooltip />\r\n\r\n                <CartesianGrid stroke=\"#f5f5f5\" />\r\n                <Bar dataKey=\"value\" fill=\"#82ca9d\" />\r\n            </BarChart>\r\n\r\n\r\n        </Container>\r\n    );\r\n}\r\nconst renderActiveShape = (props: any) => {\r\n    const RADIAN = Math.PI / 180;\r\n    const {\r\n        cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle,\r\n        fill, payload, percent, value,\r\n    } = props;\r\n    const sin = Math.sin(-RADIAN * midAngle);\r\n    const cos = Math.cos(-RADIAN * midAngle);\r\n    const sx = cx + (outerRadius + 10) * cos;\r\n    const sy = cy + (outerRadius + 10) * sin;\r\n    const mx = cx + (outerRadius + 30) * cos;\r\n    const my = cy + (outerRadius + 30) * sin;\r\n    const ex = mx + (cos >= 0 ? 1 : -1) * 22;\r\n    const ey = my;\r\n    const textAnchor = cos >= 0 ? 'start' : 'end';\r\n\r\n    return (\r\n        <g>\r\n            <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>{payload.name}</text>\r\n            <Sector\r\n                cx={cx}\r\n                cy={cy}\r\n                innerRadius={innerRadius}\r\n                outerRadius={outerRadius}\r\n                startAngle={startAngle}\r\n                endAngle={endAngle}\r\n                fill={fill}\r\n            />\r\n            <Sector\r\n                cx={cx}\r\n                cy={cy}\r\n                startAngle={startAngle}\r\n                endAngle={endAngle}\r\n                innerRadius={outerRadius + 6}\r\n                outerRadius={outerRadius + 10}\r\n                fill={fill}\r\n            />\r\n            <path d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`} stroke={fill} fill=\"none\" />\r\n            <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\r\n            <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} textAnchor={textAnchor} fill=\"#333\">{`${value} post${value > 1 ? 's' : ''}`}</text>\r\n            <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} dy={18} textAnchor={textAnchor} fill=\"#999\">\r\n                {`(${(percent * 100).toFixed(2)}%)`}\r\n            </text>\r\n        </g>\r\n    );\r\n};\r\nexport default connect((state: StateType) => {\r\n    return {\r\n        posts: state.posts,\r\n        user: state.user\r\n    }\r\n})(AdminPage)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Form, Label, Button } from 'semantic-ui-react';\r\nimport { UnregisteredUser, User } from '../../model/model.type';\r\nimport { registerUser } from '../../actions/UserActions';\r\nimport { withRouter, RouteComponentProps, Redirect } from 'react-router-dom';\r\nimport { StateType } from '../../model/store.type';\r\ninterface Props {\r\n    onSubmit: (user: UnregisteredUser) => Promise<any>,\r\n    user: User | null\r\n}\r\nfunction Signup(props: Props & RouteComponentProps) {\r\n    const [username, setUsername] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n    const [confirmPassword, setConfirmPassword] = React.useState('');\r\n    const [firstname, setFirstname] = React.useState('');\r\n    const [lastname, setlLastname] = React.useState('');\r\n    const [age, setAge] = React.useState<number | undefined>(undefined);\r\n    const [error, setError] = React.useState('');\r\n    if (props.user) {\r\n        return (\r\n            <Redirect to='/' />\r\n        )\r\n    }\r\n    return (\r\n        <Form size='big' onSubmit={(e, data) => {\r\n            e.preventDefault();\r\n            if (password !== confirmPassword) {\r\n                setError(`Passwords don't match`);\r\n                return;\r\n            }\r\n            if (username === '') {\r\n                setError('Username is required');\r\n                return;\r\n            }\r\n            if (password === '') {\r\n                setError('password is required');\r\n                return;\r\n            }\r\n            if (firstname === '') {\r\n                setError('firstname is required');\r\n                return;\r\n            }\r\n            if (lastname === '') {\r\n                setError('lastname is required');\r\n                return;\r\n            }\r\n            if (!age) {\r\n                setError('Age is required');\r\n                return;\r\n            }\r\n            props.onSubmit({\r\n                age: age,\r\n                firstName: firstname,\r\n                lastName: lastname,\r\n                password: password,\r\n                username: username\r\n            }).then(value => {\r\n                if (value && value.error) {\r\n                    setError(value.error);\r\n                } else {\r\n                    props.history.push('/');\r\n                }\r\n            })\r\n\r\n        }}>\r\n            {error !== '' && <Label color='red' >{error}</Label>}\r\n            <Form.Field>\r\n                <label>Username</label>\r\n                <input placeholder='Username' value={username} onChange={(e) => {\r\n                    setUsername(e.target.value);\r\n                }} />\r\n            </Form.Field>\r\n            <Form.Field>\r\n                <label>Password</label>\r\n                <input type='password' value={password} onChange={(e) => {\r\n                    setPassword(e.target.value);\r\n                }} />\r\n            </Form.Field>\r\n            <Form.Field>\r\n                <label>Repeat password</label>\r\n                <input type='password' value={confirmPassword} onChange={(e) => {\r\n                    setConfirmPassword(e.target.value);\r\n                }} />\r\n            </Form.Field>\r\n            <Form.Field>\r\n                <label>First name</label>\r\n                <input type=\"text\" value={firstname} onChange={(e) => {\r\n                    setFirstname(e.target.value);\r\n                }} />\r\n            </Form.Field>\r\n            <Form.Field>\r\n                <label>Last name</label>\r\n                <input type=\"text\" value={lastname} onChange={(e) => {\r\n                    setlLastname(e.target.value);\r\n                }} />\r\n            </Form.Field>\r\n            <Form.Field>\r\n                <label>Age</label>\r\n                <input type=\"number\" value={age} onChange={(e) => {\r\n                    setAge(parseInt(e.target.value));\r\n                }} />\r\n            </Form.Field>\r\n            <Button className='inverted'>\r\n                Sign up\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\nexport default withRouter(connect((state: StateType) => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}, dispach => {\r\n    return {\r\n        onSubmit: registerUser(dispach)\r\n    }\r\n})(Signup));","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport { Grid, Label } from 'semantic-ui-react';\r\nimport './App.css';\r\nimport PostDetails from './components/PostDetails';\r\nimport TopMenu from './components/TopMenu';\r\nimport ViewPosts from './components/ViewPosts';\r\nimport { connect } from 'react-redux';\r\nimport { StateType } from './model/store.type';\r\nimport { loadPosts } from './actions/PostActons';\r\nimport Login from './components/user/Login';\r\nimport UserPosts from './components/UserPosts';\r\nimport NewPost, { UpdatePost } from './components/user/NewPost';\r\nimport AdminPage from './components/AdminPage';\r\nimport { chechUser } from './actions/UserActions';\r\nimport Signup from './components/user/Signup';\r\nimport { loadCategories } from './actions/PostCategoryActions';\r\nfunction App(props: any) {\r\n  const [loading, setLoading] = React.useState(true);\r\n\r\n  React.useEffect(() => {\r\n    console.log('pre');\r\n    props.loadPosts();\r\n    props.loadCat();\r\n    props.findUser().then((value: void) => {\r\n      console.log('end')\r\n      setLoading(false);\r\n    });\r\n  }, [])\r\n  if (loading) {\r\n    return (<>\r\n      <Label>Loading...</Label>\r\n    </>)\r\n  }\r\n  return (\r\n    <Grid padded='horizontally' columns='16' className='body'>\r\n      <Grid.Row className='firstRow' >\r\n        <TopMenu />\r\n      </Grid.Row>\r\n\r\n      <Grid.Row centered className='secondRow'>\r\n        <Switch>\r\n          <Route exact path='/'>\r\n            <ViewPosts />\r\n          </Route>\r\n          <Route exact path='/index.html'>\r\n            <Redirect to='/' />\r\n          </Route>\r\n          <Route exact path='/post'>\r\n            <UserPosts />\r\n          </Route>\r\n          <Route path='/post/:id'>\r\n            <PostDetails />\r\n          </Route>\r\n          <Route exact path='/admin'>\r\n            <AdminPage />\r\n          </Route>\r\n          <Route exact path='/newPost'>\r\n            <NewPost />\r\n          </Route>\r\n          <Route exact path='/update/:id'>\r\n            <UpdatePost />\r\n          </Route>\r\n          <Route exact path='/login'>\r\n            <Login />\r\n          </Route>\r\n          <Route exact path='/signup'>\r\n            <Signup />\r\n          </Route>\r\n          <Route to='/'>\r\n            Path does not exist\r\n          </Route>\r\n        </Switch>\r\n      </Grid.Row>\r\n\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default connect((state: StateType) => {\r\n  return {\r\n  }\r\n}, (dispach) => {\r\n  return {\r\n    loadPosts: loadPosts(dispach),\r\n    findUser: chechUser(dispach),\r\n    loadCat: loadCategories(dispach)\r\n  }\r\n})(App);\r\n","import { combineReducers } from \"redux\";\r\nimport { postReducer } from './reducers/PostReducer'\r\nimport { postCategoryReducer, activeCategoryReducer } from \"./reducers/PostCategoryReducer\";\r\nimport { userReducer } from \"./reducers/UserReducer\";\r\nimport { titleReducer } from \"./reducers/TitleReducer\";\r\nexport default combineReducers({\r\n    posts: postReducer,\r\n    postCategories: postCategoryReducer,\r\n    selectedCategoryId: activeCategoryReducer,\r\n    user: userReducer,\r\n    title: titleReducer\r\n});","import { Post } from \"../model/model.type\";\r\nimport { Action, ActionType } from \"../model/action.type\";\r\n\r\nexport const postReducer = (state: Post[] = [], action: Action = { type: ActionType.DEFAULT }): Post[] => {\r\n\r\n    switch (action.type) {\r\n        case ActionType.ADD_POST:\r\n\r\n            return [...state, action.post];\r\n        case ActionType.SET_POSTS:\r\n\r\n            return action.posts;\r\n        case ActionType.UPDATE_POST:\r\n            return state.map(element => {\r\n                if (element.id !== action.post.id) {\r\n                    return element\r\n                }\r\n                return action.post\r\n            })\r\n        case ActionType.DELETE_POST:\r\n            return state.filter(element => element.id !== action.id);\r\n        case ActionType.ADD_COMMENT:\r\n            return state.map(element => {\r\n                if (element.id === action.comment.post.id) {\r\n                    return { ...element, comments: [...element.comments, { ...action.comment, post: element }] }\r\n                }\r\n                return element;\r\n            });\r\n        case ActionType.DELETE_COMMENT:\r\n            return state.map(element => {\r\n                if (element.id === action.comment.post.id) {\r\n                    return { ...element, comments: element.comments.filter(com => com.id !== action.comment.id) }\r\n                }\r\n                return element;\r\n            })\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { PostCategory } from \"../model/model.type\";\r\nimport { Action, ActionType } from \"../model/action.type\";\r\n\r\nexport const postCategoryReducer = (state: PostCategory[] = [], action: Action = { type: ActionType.DEFAULT }) => {\r\n    switch (action.type) {\r\n        case ActionType.FETCH_POST_CATEGORIES:\r\n            return [...state, action.categories];\r\n        case ActionType.SET_CATEGORIES:\r\n            return action.categories;\r\n    }\r\n    return state;\r\n}\r\nexport const activeCategoryReducer = (state: number = 0, action: Action = { type: ActionType.DEFAULT }) => {\r\n    switch (action.type) {\r\n        case ActionType.SET_ACTIVE_CATEGORY:\r\n            return action.category === state ? 0 : action.category;\r\n        default:\r\n            return state;\r\n    }\r\n}","import { User } from \"../model/model.type\";\r\nimport { Action, ActionType } from \"../model/action.type\";\r\n\r\nexport const userReducer = (state: User | null = null, action: Action = { type: ActionType.DEFAULT }) => {\r\n    switch (action.type) {\r\n        case ActionType.LOGIN:\r\n            return action.user;\r\n\r\n        case ActionType.LOGOUT:\r\n            return null;\r\n        default:\r\n            return state;\r\n    }\r\n}","import { Action, ActionType } from \"../model/action.type\";\r\n\r\nexport const titleReducer = (state: string = '', action: Action = { type: ActionType.DEFAULT }) => {\r\n    if (action.type === ActionType.SET_TITLE) {\r\n        return action.title;\r\n    }\r\n\r\n    return state;\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { createStore } from 'redux';\r\nimport App from './App';\r\nimport './index.css';\r\nimport { StateType } from './model/store.type';\r\nimport rootReducer from './rootReducer';\r\nimport * as serviceWorker from './serviceWorker';\r\nconst store = createStore<StateType, any, any, any>(rootReducer);\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}